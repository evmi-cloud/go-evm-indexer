syntax = "proto3";

package evm_indexer.v1;

option go_package = "github.com/evmi-cloud/go-evm-indexer/gen/evm-indexer/v1;evm_indexer";

message EvmiInstance {
    optional uint32 id = 1;        
    string instance_id = 2;
    string ipv4 = 3;
    string status = 4;
    optional uint32 created_at = 5; 
    optional uint32 updated_at = 6; 
    optional uint32 deleted_at = 7; 
}

message EvmBlockchain {
  optional uint32 id = 1;   
  uint64 chain_id = 2;
  string name = 3;
  string rpc_url = 4;
  uint64 block_range = 5;
  uint64 block_slice = 6;
  uint64 pull_interval = 7;
  uint64 rpc_max_batch_size = 8;
  optional uint32 created_at = 9; 
  optional uint32 updated_at = 10; 
  optional uint32 deleted_at = 11; 
}

message EvmJsonAbi {
  optional uint32 id = 1;   
  string contract_name = 2;
  string content = 3;
  optional uint32 created_at = 4; 
  optional uint32 updated_at = 5; 
  optional uint32 deleted_at = 6; 
}

message EvmLogStore {
  optional uint32 id = 1;   
  string identifier = 2;
  string description = 3;
  string store_type = 4;
  string store_config_json = 5;
  optional uint32 created_at = 6; 
  optional uint32 updated_at = 7; 
  optional uint32 deleted_at = 8; 
}

message EvmLogPipeline {
  optional uint32 id = 1;   

  string name = 2;

  uint32 evmi_instance_id = 4;
  uint32 evm_log_store_id = 6;

  optional uint32 created_at = 7; 
  optional uint32 updated_at = 8; 
  optional uint32 deleted_at = 9; 
}

message EvmLogSource {
  optional uint32 id = 1; 

  string type = 2;
  bool enabled = 3;
  string status = 4;

  uint64 start_block = 5;
  uint64 sync_block = 6;

  // Nullable fields
  optional string address = 7;

  optional string topic0 = 8;
  repeated string topic_filters = 9;

  optional int32 factory_child_evm_json_abi = 10;
  optional string factory_creation_function_name =11;
  optional string factory_creation_address_log_arg = 20;

  uint32 evm_log_pipeline_id = 13;
  uint32 evm_json_abi_id = 14;
  uint32 evm_blockchain_id = 15;

  optional uint32 created_at = 16; 
  optional uint32 updated_at = 17; 
  optional uint32 deleted_at = 18; 
}

message EvmMetadata {
    optional string contract_name = 1;
    optional string event_name = 2;
    optional string function_name = 3;
    map<string, string> data = 4;
}

message EvmLog {
  string id = 1;
  uint32 store_id = 2;
  uint32 source_id = 3;
  string address = 4;
  repeated string topics = 5;
  string data = 6;

  uint64 block_number = 7;
  string transaction_from = 8;
  string transaction_hash = 9;
  uint64 transaction_index = 10;
  string block_hash = 11;
  uint64 log_index = 12;
  bool removed = 13;

  EvmMetadata metadata = 14;
}

message EvmTransaction {
  string id = 1;
  uint32 store_id = 2;
  uint32 source_id = 3;
  uint64 block_number = 4;
  uint64 transaction_index = 5;
  uint64 chain_id = 6;
  string from = 7;
  string data = 8;

  string value = 9;

  uint64 nonce = 10;
  string to = 11;
  string hash = 12;

  EvmMetadata metadata = 13;
}

// Pagination
message Pagination {
  uint32 limit = 1;
  uint32 offset = 2;
}

// ==================== CRUD MESSAGES ===================== //

// EvmiInstance
message GetEvmiInstanceRequest {
  uint32 id = 1;
}
message GetEvmiInstanceResponse {
  EvmiInstance instance = 1;
}
message ListEvmiInstancesRequest {
  Pagination pagination = 1;
}
message ListEvmiInstancesResponse {
  repeated EvmiInstance instances = 1;
}

// EvmBlockchain
message CreateEvmBlockchainRequest {
  EvmBlockchain blockchain = 1;
}
message CreateEvmBlockchainResponse {
  uint32 id = 1;
}
message GetEvmBlockchainRequest {
  uint32 id = 1;
}
message GetEvmBlockchainResponse {
  EvmBlockchain blockchain = 1;
}
message UpdateEvmBlockchainRequest {
  EvmBlockchain blockchain = 1;
}
message UpdateEvmBlockchainResponse {
}
message ListEvmBlockchainsRequest {
  Pagination pagination = 1;
}
message ListEvmBlockchainsResponse {
  repeated EvmBlockchain blockchains = 1;
}
message DeleteEvmBlockchainRequest {
  uint32 id = 1;
}
message DeleteEvmBlockchainResponse {
}

// EvmJsonAbi
message CreateEvmJsonAbiRequest {
  EvmJsonAbi abi = 1;
}
message CreateEvmJsonAbiResponse {
  uint32 id = 1;
}
message GetEvmJsonAbiRequest {
  uint32 id = 1;
}
message GetEvmJsonAbiResponse {
  EvmJsonAbi abi = 1;
}
message UpdateEvmJsonAbiRequest {
  EvmJsonAbi abi = 1;
}
message UpdateEvmJsonAbiResponse {
}
message ListEvmJsonAbisRequest {
  Pagination pagination = 1;
}
message ListEvmJsonAbisResponse {
  repeated EvmJsonAbi abis = 1;
}
message DeleteEvmJsonAbiRequest {
  uint32 id = 1;
}
message DeleteEvmJsonAbiResponse {
}

// EvmLogStore
message CreateEvmLogStoreRequest {
  EvmLogStore store = 1;
}
message CreateEvmLogStoreResponse {
  uint32 id = 1;
}
message GetEvmLogStoreRequest {
  uint32 id = 1;
}
message GetEvmLogStoreResponse {
  EvmLogStore store = 1;
}
message UpdateEvmLogStoreRequest {
  EvmLogStore store = 1;
}
message UpdateEvmLogStoreResponse {
}
message ListEvmLogStoresRequest {
  Pagination pagination = 1;
}
message ListEvmLogStoresResponse {
  repeated EvmLogStore stores = 1;
}
message DeleteEvmLogStoreRequest {
  uint32 id = 1;
}
message DeleteEvmLogStoreResponse {
}

// EvmLogPipeline
message CreateEvmLogPipelineRequest {
  EvmLogPipeline pipeline = 1;
}
message CreateEvmLogPipelineResponse {
  uint32 id = 1;
}
message GetEvmLogPipelineRequest {
  uint32 id = 1;
}
message GetEvmLogPipelineResponse {
  EvmLogPipeline pipeline = 1;
}
message UpdateEvmLogPipelineRequest {
  EvmLogPipeline pipeline = 1;
}
message UpdateEvmLogPipelineResponse {
}
message ListEvmLogPipelinesRequest {
  Pagination pagination = 1;
}
message ListEvmLogPipelinesResponse {
  repeated EvmLogPipeline pipelines = 1;
}
message DeleteEvmLogPipelineRequest {
  uint32 id = 1;
}
message DeleteEvmLogPipelineResponse {
}


// EvmLogSource
message CreateEvmLogSourceRequest {
  EvmLogSource source = 1;
}
message CreateEvmLogSourceResponse {
  uint32 id = 1;
}
message GetEvmLogSourceRequest {
  uint32 id = 1;
}
message GetEvmLogSourceResponse {
  EvmLogSource source = 1;
}
message UpdateEvmLogSourceRequest {
  EvmLogSource source = 1;
}
message UpdateEvmLogSourceResponse {
}
message ListEvmLogSourcesRequest {
  Pagination pagination = 1;
  uint32 pipeline_id = 2;
}
message ListEvmLogSourcesResponse {
  repeated EvmLogSource sources = 1;
}
message DeleteEvmLogSourceRequest {
  uint32 id = 1;
}
message DeleteEvmLogSourceResponse {
}

message StartSourceIndexerRequest {
  uint32 id = 1;
}
message StartSourceIndexerResponse {
  bool success = 1;
  string error = 2;
}
message StopSourceIndexerRequest {
  uint32 id = 1;
}
message StopSourceIndexerResponse {
  bool success = 1;
  string error = 2;
}

// EvmLog
message ListEvmLogsRequest {
  Pagination pagination = 1;
  uint32 pipeline_id = 2;
  uint64 fromTimestamp = 3;
  uint64 toTimestamp = 4;
}
message ListEvmLogsResponse {
  repeated EvmLog logs = 1;
}

// EvmTransaction
message ListEvmTransactionsRequest {
  Pagination pagination = 1;
  uint32 pipeline_id = 2;
  uint64 fromTimestamp = 3;
  uint64 toTimestamp = 4;
}
message ListEvmTransactionsResponse {
  repeated EvmTransaction transactions = 1;
}


service EvmIndexerService {
  // EvmiInstance
  rpc GetEvmiInstance(GetEvmiInstanceRequest) returns (GetEvmiInstanceResponse);
  rpc ListEvmiInstances(ListEvmiInstancesRequest) returns (ListEvmiInstancesResponse);

  // EvmBlockchain
  rpc CreateEvmBlockchain(CreateEvmBlockchainRequest) returns (CreateEvmBlockchainResponse);
  rpc GetEvmBlockchain(GetEvmBlockchainRequest) returns (GetEvmBlockchainResponse);
  rpc UpdateEvmBlockchain(UpdateEvmBlockchainRequest) returns (UpdateEvmBlockchainResponse);
  rpc ListEvmBlockchains(ListEvmBlockchainsRequest) returns (ListEvmBlockchainsResponse);
  rpc DeleteEvmBlockchain(DeleteEvmBlockchainRequest) returns (DeleteEvmBlockchainResponse);

  // EvmJsonAbi
  rpc CreateEvmJsonAbi(CreateEvmJsonAbiRequest) returns (CreateEvmJsonAbiResponse);
  rpc GetEvmJsonAbi(GetEvmJsonAbiRequest) returns (GetEvmJsonAbiResponse);
  rpc UpdateEvmJsonAbi(UpdateEvmJsonAbiRequest) returns (UpdateEvmJsonAbiResponse);
  rpc ListEvmJsonAbis(ListEvmJsonAbisRequest) returns (ListEvmJsonAbisResponse);
  rpc DeleteEvmJsonAbi(DeleteEvmJsonAbiRequest) returns (DeleteEvmJsonAbiResponse);

  // EvmLogStore
  rpc CreateEvmLogStore(CreateEvmLogStoreRequest) returns (CreateEvmLogStoreResponse);
  rpc GetEvmLogStore(GetEvmLogStoreRequest) returns (GetEvmLogStoreResponse);
  rpc UpdateEvmLogStore(UpdateEvmLogStoreRequest) returns (UpdateEvmLogStoreResponse);
  rpc ListEvmLogStores(ListEvmLogStoresRequest) returns (ListEvmLogStoresResponse);
  rpc DeleteEvmLogStore(DeleteEvmLogStoreRequest) returns (DeleteEvmLogStoreResponse);

  // EvmLogPipeline
  rpc CreateEvmLogPipeline(CreateEvmLogPipelineRequest) returns (CreateEvmLogPipelineResponse);
  rpc GetEvmLogPipeline(GetEvmLogPipelineRequest) returns (GetEvmLogPipelineResponse);
  rpc UpdateEvmLogPipeline(UpdateEvmLogPipelineRequest) returns (UpdateEvmLogPipelineResponse);
  rpc ListEvmLogPipelines(ListEvmLogPipelinesRequest) returns (ListEvmLogPipelinesResponse);
  rpc DeleteEvmLogPipeline(DeleteEvmLogPipelineRequest) returns (DeleteEvmLogPipelineResponse);
  rpc StartSourceIndexer(StartSourceIndexerRequest) returns (StartSourceIndexerResponse) {}
  rpc StopSourceIndexer(StopSourceIndexerRequest) returns (StopSourceIndexerResponse) {}

  // EvmLogSource
  rpc CreateEvmLogSource(CreateEvmLogSourceRequest) returns (CreateEvmLogSourceResponse);
  rpc GetEvmLogSource(GetEvmLogSourceRequest) returns (GetEvmLogSourceResponse);
  rpc UpdateEvmLogSource(UpdateEvmLogSourceRequest) returns (UpdateEvmLogSourceResponse);
  rpc ListEvmLogSources(ListEvmLogSourcesRequest) returns (ListEvmLogSourcesResponse);
  rpc DeleteEvmLogSource(DeleteEvmLogSourceRequest) returns (DeleteEvmLogSourceResponse);

  // EvmLog
  rpc ListEvmLogs(ListEvmLogsRequest) returns (ListEvmLogsResponse);

  // EvmTransaction
  rpc ListEvmTransactions(ListEvmTransactionsRequest) returns (ListEvmTransactionsResponse);
}
